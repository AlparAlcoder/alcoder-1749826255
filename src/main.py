{"code": "from fastapi import FastAPI, HTTPException\nfrom pydantic import BaseModel\nfrom typing import List\n\napp = FastAPI()\n\nclass Event(BaseModel):\n    name: str\n    date: str\n    location: str\n\nevents_db = []\n\n@app.post(\"/events/\", response_model=Event)\ndef create_event(event: Event):\n    events_db.append(event)\n    return event\n\n@app.get(\"/events/\", response_model=List[Event])\ndef get_events():\n    return events_db\n\n@app.get(\"/events/{event_id}\", response_model=Event)\ndef get_event(event_id: int):\n    try:\n        return events_db[event_id]\n    except IndexError:\n        raise HTTPException(status_code=404, detail=\"Event not found\")\n\n@app.put(\"/events/{event_id}\", response_model=Event)\ndef update_event(event_id: int, event: Event):\n    try:\n        events_db[event_id] = event\n        return event\n    except IndexError:\n        raise HTTPException(status_code=404, detail=\"Event not found\")\n\n@app.delete(\"/events/{event_id}\", response_model=Event)\ndef delete_event(event_id: int):\n    try:\n        event = events_db.pop(event_id)\n        return event\n    except IndexError:\n        raise HTTPException(status_code=404, detail=\"Event not found\")"}